From 4f91fd3dfaa07ab3fa600f2f6bf655b6fb605cd7 Mon Sep 17 00:00:00 2001
From: Aymeric PLOTON <aymeric.ploton@provenrun.com>
Date: Thu, 20 Jul 2023 19:11:49 +0200
Subject: [PATCH 3/5] Specific integration of pncd for s32g3-vnp-rdb3

---
 plat/nxp/s32/s32_bl2_el3.c | 25 +++++++++++++++++++++----
 plat/nxp/s32/s32_bl31.c    |  4 ++--
 plat/nxp/s32/s32_storage.c | 12 +++++++++---
 3 files changed, 32 insertions(+), 9 deletions(-)

diff --git a/plat/nxp/s32/s32_bl2_el3.c b/plat/nxp/s32/s32_bl2_el3.c
index f80b199b0..0fc823470 100644
--- a/plat/nxp/s32/s32_bl2_el3.c
+++ b/plat/nxp/s32/s32_bl2_el3.c
@@ -94,17 +94,17 @@ int add_bl31_img_to_mem_params_descs(bl_mem_params_node_t *params,
 				      image_info_t, IMAGE_ATTRIB_PLAT_SETUP),
 		.image_info.image_max_size = BL31_LIMIT - BL31_BASE,
 		.image_info.image_base = BL31_BASE,
-#ifdef SPD_opteed
+#if defined(SPD_opteed) || defined(SPD_pncd)
 		.next_handoff_image_id = BL32_IMAGE_ID,
 #else
 		.next_handoff_image_id = BL33_IMAGE_ID,
-#endif
+#endif /* SPD_opteed ||SPD_pncd */
 	};
 
 	return 0;
 }
 
-#ifdef SPD_opteed
+#if defined(SPD_opteed) || defined(SPD_pncd)
 int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
 				     size_t *index, size_t size)
 {
@@ -129,6 +129,7 @@ int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
 	return 0;
 }
 
+#ifdef SPD_opteed
 int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
 					    size_t *index, size_t size)
 {
@@ -154,6 +155,14 @@ int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
 	return 0;
 }
 
+#else /* SPD_pncd */
+int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
+                                            size_t *index, size_t size)
+{
+        return 0;
+}
+#endif /* SPD_opteed */
+
 #else
 int add_bl32_img_to_mem_params_descs(bl_mem_params_node_t *params,
 				     size_t *index, size_t size)
@@ -166,7 +175,7 @@ int add_bl32_extra1_img_to_mem_params_descs(bl_mem_params_node_t *params,
 {
 	return 0;
 }
-#endif /* SPD_opteed */
+#endif /* SPD_opteed || SPD_pncd */
 
 int add_bl33_img_to_mem_params_descs(bl_mem_params_node_t *params,
 				     size_t *index, size_t size)
@@ -785,6 +794,8 @@ int bl2_plat_handle_post_image_load(unsigned int image_id)
 		bl_mem_params = get_bl_mem_params_node(image_id);
 		assert(bl_mem_params && "bl_mem_params cannot be NULL");
 
+		#ifndef SPD_pncd
+
 		pager_mem_params = get_bl_mem_params_node(BL32_EXTRA1_IMAGE_ID);
 		assert(pager_mem_params && "pager_mem_params cannot be NULL");
 
@@ -795,6 +806,12 @@ int bl2_plat_handle_post_image_load(unsigned int image_id)
 			WARN("OPTEE header parse error.\n");
 			return ret;
 		}
+
+		#else
+			(void) bl_mem_params;
+			(void) pager_mem_params;
+			(void) paged_mem_params;
+		#endif /* not SPD_pncd*/
 	}
 
 	return 0;
diff --git a/plat/nxp/s32/s32_bl31.c b/plat/nxp/s32/s32_bl31.c
index 4bcfb3467..936d2fa83 100644
--- a/plat/nxp/s32/s32_bl31.c
+++ b/plat/nxp/s32/s32_bl31.c
@@ -315,14 +315,14 @@ void bl31_early_platform_setup2(u_register_t arg0, u_register_t arg1,
 	bl33_image_ep_info.spsr = s32_get_spsr_for_bl33_entry();
 	SET_SECURITY_STATE(bl33_image_ep_info.h.attr, NON_SECURE);
 
-#ifdef SPD_opteed
+#if defined(SPD_opteed) || defined (SPD_pncd)
 	SET_PARAM_HEAD(&bl32_image_ep_info, PARAM_EP, VERSION_2, 0);
 	SET_SECURITY_STATE(bl32_image_ep_info.h.attr, SECURE);
 	bl32_image_ep_info.pc = S32_BL32_BASE;
 	bl32_image_ep_info.spsr = 0;
 	bl32_image_ep_info.args.arg0 = MODE_RW_64;
 	bl32_image_ep_info.args.arg3 = BL33_DTB;
-#endif
+#endif /* SPD_opteed || SPD_pncd */
 }
 
 static uintptr_t get_dtb_base_page(void)
diff --git a/plat/nxp/s32/s32_storage.c b/plat/nxp/s32/s32_storage.c
index a42f619..3f4275b 100644
--- a/plat/nxp/s32/s32_storage.c
+++ b/plat/nxp/s32/s32_storage.c
@@ -26,8 +26,10 @@
 
 #ifdef SPD_opteed
 #define FIP_BACKEND_MEMMAP_ID	(BL32_EXTRA1_IMAGE_ID + 1)
-#elif TRUSTED_BOARD_BOOT
+#elif (TRUSTED_BOARD_BOOT == 1) && !defined(SPD_opteed)
 #define FIP_BACKEND_MEMMAP_ID	(NON_TRUSTED_FW_CONTENT_CERT_ID + 1)
+#elif (TRUSTED_BOARD_BOOT !=1 ) && defined(SPD_pncd)
+#define FIP_BACKEND_MEMMAP_ID   (BL32_IMAGE_ID + 1)
 #else
 #define FIP_BACKEND_MEMMAP_ID	(BL33_IMAGE_ID + 1)
 #endif
@@ -64,16 +66,18 @@ static struct image_storage_info images_info[] = {
 		 * image from FIP, by calling set_image_spec() function
 		 * */
 	},
-#ifdef SPD_opteed
+#if defined(SPD_opteed) || defined(SPD_pncd)
 	{
 		.image_id = BL32_IMAGE_ID,
 		.uuid = UUID_SECURE_PAYLOAD_BL32,
 	},
+#ifdef SPD_opteed
 	{
 		.image_id = BL32_EXTRA1_IMAGE_ID,
 		.uuid = UUID_SECURE_PAYLOAD_BL32_EXTRA1,
 	},
 #endif
+#endif /* SPD_opteed ||SPD_pncd */
 	{
 		.image_id = BL33_IMAGE_ID,
 		.uuid = UUID_NON_TRUSTED_FIRMWARE_BL33,
